# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# 
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# 
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind-key -n C-z resize-pane -Z

bind C-k send-keys -R \; clear-history

# Rebind new split creation to more logical keys
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

set-option -g mouse on

bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

set -sg escape-time 0

set -g prefix C-a

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# set-option -g set-titles on
# set-option -g set-titles-string "#{s/.Users.kfleischman/~/:pane_current_path} / #W"

# set-option -g status-interval 5
# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{b:pane_current_path}'
