syntax on " enable syntax highlighting

" use comma as <leader> key.
" The <leader> key is a special key mapping for vim, usually used as the first character of
"   user-configured custom key mappings.
" Default <leader> key is backslash, which is uncomfortable to reach.
let mapleader = ","

set background=dark
set nofixendofline

set relativenumber " display line numbers as relative to current line in left-hand column
set number " display actual line number instead of "line 0" for the current line

set hidden " allow leaving buffers without saving them

set termguicolors " allow vim to use full color palette from your terminal
set laststatus=2 " always show status bar at bottom of screen
set scrolloff=15 " always show 15 lines above + below cursor

set updatetime=20

set foldmethod=syntax
set foldlevel=99

set mouse=a " allow scrolling with mousewheel

set undofile " save undo history, instead of losing it every time vim closes

" !!! This isnt working, ~ is not expanded
" Set permanent directories for vim's temporary files 
if !isdirectory(expand("~/.vim/swapfiles"))
    call mkdir(expand("~/.vim/swapfiles"), "p")
endif
if !isdirectory(expand("~/.vim/backupfiles"))
    call mkdir(expand("~/.vim/backupfiles"), "p")
endif
if !isdirectory(expand("~/.vim/undodir"))
    call mkdir(expand("~/.vim/undodir"), "p")
endif
set directory=~/.vim/swapfiles//
set backupdir=~/.vim/backupfiles//
set undodir=~/.vim/undodir

" Tab spacing
set tabstop=2 " how many spaces to render for a <Tab> character
set expandtab " Insert spaces instead of literal <Tab> characters when Tab key is pressed
set shiftwidth=2 " ??? no idea
set smarttab " use shiftwidth instead of tabstop when inserting spaces at start of line ???

" searching
set ignorecase " case-insensitive searches by default
set smartcase " automatically use case-sensitive search if a capital letter is used in search term
set incsearch " perform search as you type the search term, instead of after submitting search
set hlsearch " highlight search results on page

" keymap to clear search highlighting from page (comma, then space)
nnoremap <leader><space> :nohlsearch<CR>

" line lengths
set formatoptions-=t " do not automatically wrap text while typing long lines
set colorcolumn=+1 " highlight column set by textwidth to mark long lines
set textwidth=100 " width for colorcolumn. Would auto-break lines if formatoptions included "t"

set showtabline=2 "always show tabline
" keybindings to navigate open buffers without needing to manually recall them
map <S-Tab> :bp<CR> 
map <Tab> :bn<CR>

nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
